{"ast":null,"code":"var _jsxFileName = \"/home/abigael/development/code/phase2/botbottlr/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage({\n  botCollection,\n  setBotCollection,\n  setCheckBotCollection\n}) {\n  _s();\n  //start here with your code for step one \n  //adding destructured props\n  //setting bot state\n  const [botBox, setBotBox] = React.useState([]); //initializing to empty array\n  //adding bot to the collection\n  const addBot = bot => {\n    const botInBox = botBox.find(item => {\n      return item.id === bot.id;\n    });\n    if (!botInBox) {\n      setBotBox([...botBox, bot]);\n    }\n  };\n  //removing bot from the collection\n  const remBot = bot => {\n    const botInBox = botBox.find(item => {\n      return item.id === bot.id;\n    });\n    if (botInBox) {\n      setBotBox(botBox.filter(removedBot => removedBot.id !== bot.id));\n    }\n  };\n\n  //discharging a bot\n  const dischargeBot = bot => {\n    setBotCollection(botCollection.filter(item => item.id !== bot.id));\n    remBot(bot);\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setCheckBotCollection(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botBox: botBox,\n      remBot: remBot,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      botCollection: botCollection,\n      addBot: addBot,\n      dischargeBot: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"+CCnl4fb/R8ZdIs/ly7OcLweRF4=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","botCollection","setBotCollection","setCheckBotCollection","_s","botBox","setBotBox","useState","addBot","bot","botInBox","find","item","id","remBot","filter","removedBot","dischargeBot","fetch","method","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abigael/development/code/phase2/botbottlr/src/components/BotsPage.js"],"sourcesContent":["import React from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage({botCollection, setBotCollection, setCheckBotCollection}) {\n  //start here with your code for step one \n  //adding destructured props\n  //setting bot state\n  const [botBox, setBotBox] = React.useState([]) //initializing to empty array\n  //adding bot to the collection\n  const addBot = (bot) => {\n    const botInBox = botBox.find((item) => {return (item.id === bot.id)});\n    if (!botInBox) {\n      setBotBox([...botBox, bot])\n    }\n  }\n  //removing bot from the collection\n  const remBot = (bot) =>{\n    const botInBox = botBox.find((item) => {return (item.id === bot.id)});\n    if (botInBox) {\n      setBotBox(botBox.filter((removedBot) => removedBot.id !== bot.id))\n    }\n  }\n  \n  //discharging a bot\n  const dischargeBot = (bot) => {\n    setBotCollection(botCollection.filter((item) => item.id !== bot.id));\n    remBot(bot)\n    fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: \"DELETE\", \n      headers: {\"Content-Type\" : \"application/json\",},\n  }, \n\n    );\n    setCheckBotCollection(true)\n  }\n  return (\n    <div>\n      <YourBotArmy \n        botBox = {botBox}\n        remBot = {remBot}\n        dischargeBot={dischargeBot}\n      />\n      <BotCollection \n        botCollection={botCollection}\n        addBot={addBot}\n        dischargeBot={dischargeBot}\n      />\n    </div>\n  )\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAC;EAACC,aAAa;EAAEC,gBAAgB;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC1E;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC,EAAC;EAC/C;EACA,MAAMC,MAAM,GAAIC,GAAG,IAAK;IACtB,MAAMC,QAAQ,GAAGL,MAAM,CAACM,IAAI,CAAEC,IAAI,IAAK;MAAC,OAAQA,IAAI,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE;IAAC,CAAC,CAAC;IACrE,IAAI,CAACH,QAAQ,EAAE;MACbJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEI,GAAG,CAAC,CAAC;IAC7B;EACF,CAAC;EACD;EACA,MAAMK,MAAM,GAAIL,GAAG,IAAI;IACrB,MAAMC,QAAQ,GAAGL,MAAM,CAACM,IAAI,CAAEC,IAAI,IAAK;MAAC,OAAQA,IAAI,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE;IAAC,CAAC,CAAC;IACrE,IAAIH,QAAQ,EAAE;MACZJ,SAAS,CAACD,MAAM,CAACU,MAAM,CAAEC,UAAU,IAAKA,UAAU,CAACH,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,CAAC;IACpE;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAIR,GAAG,IAAK;IAC5BP,gBAAgB,CAACD,aAAa,CAACc,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,CAAC;IACpEC,MAAM,CAACL,GAAG,CAAC;IACXS,KAAK,CAAE,8BAA6BT,GAAG,CAACI,EAAG,EAAC,EAAE;MAC5CM,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QAAC,cAAc,EAAG;MAAmB;IAClD,CAEE,CAAC;IACDjB,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EACD,oBACEJ,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACH,WAAW;MACVS,MAAM,EAAIA,MAAO;MACjBS,MAAM,EAAIA,MAAO;MACjBG,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA,CAACF,aAAa;MACZI,aAAa,EAAEA,aAAc;MAC7BO,MAAM,EAAEA,MAAO;MACfS,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CA9CQJ,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}